[{"/Users/jasoncruz/Documents/clones/social-media-app/client/src/index.js":"1","/Users/jasoncruz/Documents/clones/social-media-app/client/src/App.js":"2","/Users/jasoncruz/Documents/clones/social-media-app/client/src/serviceWorker.js":"3","/Users/jasoncruz/Documents/clones/social-media-app/client/src/Services/api-helper.js":"4","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/SiteHeader/SiteHeader.jsx":"5","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/Container/Container.jsx":"6","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/ProfilePage/ProfilePage.jsx":"7","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/PostInfoPage/PostInfoPage.jsx":"8","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/HomePage/HomePage.jsx":"9","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/PostEditPage/PostEditPage.jsx":"10","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/CreatePost/CreatePost.jsx":"11","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/HomePage/SideBar.jsx":"12","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/HomePage/PostFeedSection.jsx":"13","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/HomePage/CreatePostBox.jsx":"14","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/LoginPage/LoginPage.jsx":"15","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/Register/Register.jsx":"16","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/SiteHeader/DropDownContainer.jsx":"17","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/SiteHeader/DropHeader.jsx":"18","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/PostCard/PostCard.jsx":"19","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/PostInfoPage/TitleBar.jsx":"20","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/PostInfoPage/Content.jsx":"21","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/PostInfoPage/SideBar.jsx":"22","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/PostInfoPage/CommentSection/CommentSection.jsx":"23","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/PostInfoPage/CommentSection/MappedComments.jsx":"24","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/PostInfoPage/CommentSection/DeleteButton.jsx":"25","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/PostInfoPage/CommentSection/EditButton.jsx":"26","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/ProfilePage/SideBar.jsx":"27","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/ProfilePage/ChangeAvatar/ChangeAvatar.jsx":"28","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/ProfilePage/ChangeAvatar/MappedImagesTable.jsx":"29","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/PostInfoPage/CommentSection/CommentInput.jsx":"30","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/LoginPage/ImageSide.jsx":"31","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/LoginPage/MainSide.jsx":"32"},{"size":544,"mtime":1609150468969,"results":"33","hashOfConfig":"34"},{"size":1593,"mtime":1614796221883,"results":"35","hashOfConfig":"34"},{"size":5086,"mtime":1609150468969,"results":"36","hashOfConfig":"34"},{"size":3640,"mtime":1613565472551,"results":"37","hashOfConfig":"34"},{"size":971,"mtime":1614053609728,"results":"38","hashOfConfig":"34"},{"size":3685,"mtime":1614181440637,"results":"39","hashOfConfig":"34"},{"size":1698,"mtime":1616139111617,"results":"40","hashOfConfig":"34"},{"size":1620,"mtime":1616139170333,"results":"41","hashOfConfig":"34"},{"size":1282,"mtime":1616139111624,"results":"42","hashOfConfig":"34"},{"size":1800,"mtime":1609150468967,"results":"43","hashOfConfig":"34"},{"size":1289,"mtime":1614181473647,"results":"44","hashOfConfig":"34"},{"size":737,"mtime":1616137452177,"results":"45","hashOfConfig":"34"},{"size":675,"mtime":1616139111554,"results":"46","hashOfConfig":"34"},{"size":1106,"mtime":1616137452247,"results":"47","hashOfConfig":"34"},{"size":1612,"mtime":1616211183634,"results":"48","hashOfConfig":"34"},{"size":2111,"mtime":1616137451976,"results":"49","hashOfConfig":"34"},{"size":1691,"mtime":1616139111648,"results":"50","hashOfConfig":"34"},{"size":1294,"mtime":1616137451948,"results":"51","hashOfConfig":"34"},{"size":2438,"mtime":1616139111586,"results":"52","hashOfConfig":"34"},{"size":1034,"mtime":1616137452052,"results":"53","hashOfConfig":"34"},{"size":1581,"mtime":1616137452122,"results":"54","hashOfConfig":"34"},{"size":849,"mtime":1616137452122,"results":"55","hashOfConfig":"34"},{"size":1953,"mtime":1616137452142,"results":"56","hashOfConfig":"34"},{"size":4099,"mtime":1616139170360,"results":"57","hashOfConfig":"34"},{"size":2792,"mtime":1613638411448,"results":"58","hashOfConfig":"34"},{"size":440,"mtime":1613201310412,"results":"59","hashOfConfig":"34"},{"size":715,"mtime":1616137451978,"results":"60","hashOfConfig":"34"},{"size":1771,"mtime":1616137452046,"results":"61","hashOfConfig":"34"},{"size":1496,"mtime":1616139170358,"results":"62","hashOfConfig":"34"},{"size":1503,"mtime":1616137452157,"results":"63","hashOfConfig":"34"},{"size":1849,"mtime":1616210985785,"results":"64","hashOfConfig":"34"},{"size":2716,"mtime":1616210663785,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1954kt6",{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"68"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jasoncruz/Documents/clones/social-media-app/client/src/index.js",[],["145","146"],"/Users/jasoncruz/Documents/clones/social-media-app/client/src/App.js",["147"],"import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router';\nimport './App.css'\nimport { Redirect, Route } from 'react-router-dom'\nimport Container from './components/Container/Container'\nimport SiteHeader from './components/SiteHeader/SiteHeader';\nimport {\n  loginUser,\n  registerUser,\n  verifyUser,\n  removeToken\n} from './Services/api-helper';\n\nconst App = () => {\n  const [currentUser, setCurrentUser] = useState()\n\n\n  useEffect(() => {\n    confirmUser();\n\n\n  }, [])\n\n\n  const handleLogin = async (loginData) => {\n    const currentUser1 = await loginUser(loginData);\n    // console.log(currentUser1)\n    setCurrentUser(currentUser1)\n    return currentUser ? true : false;\n  }\n\n  const handleRegister = async (registerData) => {\n    const currentUser1 = await registerUser(registerData);\n    console.log(currentUser1)\n    setCurrentUser(currentUser1)\n  }\n\n  const confirmUser = () => {\n    const currentUser1 = verifyUser();\n    currentUser1.then(v => setCurrentUser(v))\n  }\n\n  const handleLogout = () => {\n    localStorage.clear();\n    setCurrentUser(null)\n    removeToken();\n    // this.props.history.push('/login');\n    window.location.reload()\n    return <Redirect to='login' />\n  }\n\n\n  return (\n    <div className=\"App\">\n      {\n        currentUser &&\n        <SiteHeader\n          handleLogout={handleLogout}\n          currentUser={currentUser}\n        />\n      }\n      <Container\n        currentUser={currentUser}\n        handleRegister={handleRegister}\n        handleLogin={handleLogin}\n      />\n\n\n    </div>\n  )\n}\n\n\nexport default withRouter(App);\n","/Users/jasoncruz/Documents/clones/social-media-app/client/src/serviceWorker.js",[],"/Users/jasoncruz/Documents/clones/social-media-app/client/src/Services/api-helper.js",["148"],"import axios from 'axios';\n\nconst baseUrl = process.env.NODE_ENV == 'production' ? 'https://post-tree-api.herokuapp.com/' : 'http://localhost:3000'\n// const baseUrl = 'http://localhost:3000'\n\nconst api = axios.create({\n  baseURL: baseUrl\n});\n\n// ========================================\n// ================ AUTH ==================\n// ========================================\n\nexport const loginUser = async (loginData) => {\n  const resp = await api.post('/auth/login', { auth: loginData });\n  localStorage.setItem('authToken', resp.data.token);\n  api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`;\n  return resp.data.user;\n}\n\nexport const registerUser = async (registerData) => {\n  const resp = await api.post('/users', { user: registerData });\n  localStorage.setItem('authToken', resp.data.token);\n  api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`;\n  return resp.data.user;\n}\n\nexport const verifyUser = async () => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    api.defaults.headers.common.authorization = `Bearer ${token}`;\n    const resp = await api.get('/auth/verify');\n    return resp.data;\n  }\n  return null;\n}\n\nexport const removeToken = () => {\n  api.defaults.headers.common.authorization = null;\n}\n\n// ========================================\n// ================ avatars ===============\n// ========================================\nexport const getAllAvatars = async () => {\n  const resp = await api.get('/avatars');\n  return resp.data;\n}\n\n// ========================================\n// ================ comments ===============\n// ========================================\n\nexport const getAllComments = async (postid) => {\n  const resp = await api.get(`/posts/${postid}/comments`);\n  return resp.data;\n}\n\nexport const destroyComment = async (postid, commentid) => {\n  const resp = await api.delete(`/posts/${postid}/comments/${commentid}`);\n  return resp;\n}\n\n// ========================================\n// ================ posts =================\n// ========================================\n\nexport const getAllPosts = async () => {\n  const resp = await api.get('/posts');\n  return resp.data;\n}\n// Gets all posts belonging to a specific user\nexport const getAllUsersPosts = async id => {\n  const resp = await api.get(`/users/${id}/posts`);\n  return resp.data;\n}\n\nexport const getOnePost = async (id) => {\n  const resp = await api.get(`/posts/${id}`);\n  return resp.data;\n}\n\nexport const postPost = async (postData) => {\n  const resp = await api.post('/posts', postData);\n  return resp.data;\n}\n\nexport const putPost = async (id, postData) => {\n  const resp = await api.put(`/posts/${id}`, postData);\n  return resp.data;\n}\n\nexport const destroyPost = async (id) => {\n  const resp = await api.delete(`/posts/${id}`);\n  return resp;\n}\n\n// ========================================\n// ========= posts and comments ============\n// ========================================\n\nexport const addComment = async (commentData) => {\n  const resp = await api.post(`/posts/${commentData.post_id}/comments`, commentData);\n  return resp.data;\n}\n\nexport const patchComment = async (text, postId, commentId) => {\n  const resp = await api.put(`/posts/${postId}/comments/${commentId}`, text);\n  return resp.data;\n}\n\nexport const getOneUser = async (id) => {\n  const resp = await api.get(`/users/${id}`);\n  return resp;\n}\n\n\n\n// ========================================\n// ================ users =================\n// ========================================\n\n\nexport const patchUser = async (userId, url) => {\n  const resp = await api.put(`/users/${userId}`, url);\n  return resp.data;\n}","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/SiteHeader/SiteHeader.jsx",["149"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './SiteHeader.css';\nimport logo from '../../resources/images/post-tree-logo-notext.png';\nimport DropDownContainer from './DropDownContainer.jsx';\nconst SiteHeader = (props) => {\n\n  const [currentUser, setCurrentUser] = useState(props.currentUser)\n\n\n\n  useEffect(() => {\n    // console.log(props)\n  }, [])\n\n  return (<>\n    {\n      currentUser ?\n\n        <header>\n          <div style={{ alignSelf: 'left', display: 'flex', justifyContent: 'center' }}>\n            <Link className=\"header-logo\" to='/'>\n              <img className=\"header-logo\" src={logo} alt='site logo' />\n            </Link>\n\n            <Link className='site-title' to='/'>Post Tree!</Link>\n          </div>\n\n          <DropDownContainer currentUser={props.currentUser} handleLogout={props.handleLogout} />\n\n        </header>\n\n        :\n\n        <></>\n\n    }\n\n  </>\n  )\n\n}\n\n\nexport default SiteHeader","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/Container/Container.jsx",["150","151","152","153","154"],"import React, { Component, useState, useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PostInfoPage from '../PostInfoPage/PostInfoPage.jsx'\nimport LoginPage from '../LoginPage/LoginPage';\nimport Register from '../Register/Register';\nimport { getAllComments, getAllPosts, postPost, putPost, destroyPost, loginUser, verifyUser } from '../../Services/api-helper';\nimport PostEditPage from '../PostEditPage/PostEditPage.jsx';\nimport ProfilePage from '../ProfilePage/ProfilePage.jsx'\nimport HomePage from '../HomePage/HomePage.jsx'\nimport CreatePost from '../CreatePost/CreatePost.jsx'\nimport ChangeAvatar from '../ProfilePage/ChangeAvatar/ChangeAvatar'\n\nconst Container = props => {\n\n\n\n  const [currentUser, setCurrentUser] = useState(undefined)\n  const [posts, setPosts] = useState()\n  const [rerenderPosts, setRerenderPosts] = useState(false)\n\n  const handleLogin = async (loginData) => {\n    const currentUser1 = await loginUser(loginData);\n    setCurrentUser(currentUser1)\n    return currentUser ? true : false;\n  }\n\n  const handlePostSubmit = async (postData) => {\n    await postPost(postData)\n    setRerenderPosts(true)\n  }\n  const handlePostUpdate = async (id, postData) =>\n    await putPost(id, postData);\n\n  const handlePostDelete = async (id) =>\n    await destroyPost(id);\n\n\n  useEffect(() => {\n    setRerenderPosts(false)\n  }, [rerenderPosts])\n\n\n\n  useEffect(() => {\n    const setUser = async () => await verifyUser().then((v) => setCurrentUser(v))\n    setUser()\n    console.log(currentUser)\n  }, [])\n\n\n\n  const renderedHTML = () => {\n    return currentUser ?\n      <>\n        <Route exact path=\"/login\" >\n          {currentUser ?\n            <Redirect to=\"/\" />\n            :\n            <LoginPage {...props} handleLogin={props.handleLogin} />}\n        </Route>\n\n        <Route exact path=\"/\" render={(props) => (\n          <HomePage\n            {...props}\n            handlePostDelete={handlePostDelete}\n            postList={posts}\n            rerenderPosts={rerenderPosts}\n          />\n        )} />\n\n\n        <Route exact path=\"/profile\" render={(props) => (\n          <ProfilePage\n            {...props}\n            currentUser={currentUser}\n          />\n        )} />\n\n        <Route exact path='/profile/change_avatar' render={(props) =>\n          <ChangeAvatar\n            {...props}\n            currentUser={currentUser} />}\n        />\n\n        <Route exact path=\"/posts/new\" render={(props) => (\n          <CreatePost\n            {...props}\n            currentUser={currentUser}\n            handlePostSubmit={handlePostSubmit}\n          />\n        )} />\n\n        <Route exact path=\"/posts/:id\" render={(props) => {\n          const { id } = props.match.params\n          return <PostInfoPage\n            {...props}\n            handlePostDelete={handlePostDelete}\n            postId={id}\n            currentUser={currentUser}\n          />\n        }\n        } />\n\n        <Route exact path='/posts/:id/edit' render={(props) => {\n          const { id } = props.match.params\n          return <PostEditPage\n            {...props}\n            handlePostUpdate={handlePostUpdate}\n            postId={id}\n          />\n        }} />\n      </>\n      :\n      <>\n        <Redirect to='/login' />\n        <Route exact path='/login' render={(props) => (\n          <LoginPage\n            {...props}\n            handleLogin={handleLogin}\n          />\n        )} />\n        <Route exact path='/register' render={(props) => (\n          <Register\n            {...props}\n            handleRegister={props.handleRegister}\n          />\n        )} />\n\n      </>\n  }\n  return (\n    <main>\n      {renderedHTML()}\n    </main>\n  )\n}\n\n\nexport default Container\n","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/ProfilePage/ProfilePage.jsx",["155","156","157","158"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components'\nimport { getAllUsersPosts, getOnePost, verifyUser } from '../../Services/api-helper'\nimport PostCard from '../PostCard/PostCard'\nimport SideBar from './SideBar'\n\nconst Container = styled.div`\n    /* height: 100px; */\n    width: 80%;\n    display: flex;\n    flex-direction: row;\n    /* flex-wrap: wrap; */\n    justify-content: space-evenly;\n    color: black;\n    margin: 3% auto;\n  `;\n\nconst PostsSide = styled.div`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    margin: 4% 0;\n    margin-right: 14px;\n    width: 80%; \n  `;\n\nconst ProfilePage = props => {\n\n\n  const [posts, setPosts] = useState()\n  const [currentUser, setCurrentUser] = useState(props.currentUser)\n\n  const getAllCurrentUsersPosts = async currentUser => {\n    // change '2' to current user\n    const HTMLPosts = await getAllUsersPosts(currentUser.id).then(ele => ele.map(v =>\n      // console.log(v)\n      <PostCard {...props} postData={v} />\n    ))\n    setPosts(HTMLPosts)\n  }\n\n  useEffect(() => {\n    // Must have async function within useEffect, or else promise wont be resolved\n    // Create async function so the promise can be used to pass data into the other function, then \n    // call the entire function after\n\n    getAllCurrentUsersPosts(currentUser)\n\n  }, [])\n\n  // console.log(posts)\n  return (\n    <Container>\n      <PostsSide>\n\n        {posts && posts.length > 0 ?\n          <><h2>These are all your Posts!</h2>\n            {posts}\n          </>\n          :\n          <h2>You have no posts</h2>}\n      </PostsSide>\n      <>\n        <SideBar currentUser={currentUser} />\n      </>\n\n    </Container>\n  )\n}\nexport default ProfilePage","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/PostInfoPage/PostInfoPage.jsx",["159"],"import React, { useEffect, useState } from 'react'\nimport { getOnePost } from '../../Services/api-helper'\nimport './PostInfoPage.css'\nimport CommentSection from './CommentSection/CommentSection'\nimport styled from 'styled-components'\nimport TitleBar from './TitleBar'\nimport Content from './Content'\nimport SideBar from './SideBar'\n\n\nconst Container = styled.div`\n    width: 80%;\n    margin: 3% auto;\n    display: flex;\n    flex-direction: column;\n    /* border: 1px solid black; */\n  `;\nconst Main = styled.div`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    margin: 4% 0;\n    width: 100%;\n    margin-right: 14px;\n    /* border: 1px solid black; */\n\n  `;\n\nconst SidesContainer = styled.div`\n    display: flex;\n    margin-top: 18px;\n    justify-content: space-between;\n  `;\n\nconst PostInfoPage = props => {\n\n  const [post, setPost] = useState()\n\n  const setCurrentPost = async () => {\n    const post = await getOnePost(props.postId);\n    setPost(post)\n\n  }\n  useEffect(() => {\n    setCurrentPost()\n\n    // document.title = post.title\n  }, [])\n\n  return (\n    <>\n      {\n        post &&\n        <Container>\n          <TitleBar title={post.title} />\n          <SidesContainer>\n            <Main>\n              <Content postData={post} />\n              {/* Comment section */}\n              <CommentSection post={post}\n                currentPost={post}\n                currentUser={props.currentUser}\n                postId={props.postId}\n              />\n            </Main>\n            <SideBar />\n          </SidesContainer>\n        </Container>\n      }\n    </>\n  )\n\n}\n\nexport default PostInfoPage","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/HomePage/HomePage.jsx",["160","161","162","163","164","165","166","167","168","169"],"import React, { Component, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport './HomePage.css'\nimport styled from 'styled-components'\nimport SideBar from './SideBar.jsx'\nimport { getAllComments, getAllPosts, postPost, putPost, destroyPost, loginUser, verifyUser } from '../../Services/api-helper';\nimport PostFeedSection from './PostFeedSection.jsx'\nimport CreatePostBox from './CreatePostBox.jsx'\n\n\nconst Main = styled.div`\n    width: 70%;\n    margin: 0 auto;\n    margin-top: 60px;\n    `\n\nconst Container = styled.div`\n    display : flex;\n    margin: 0 auto;\n    margin-top: 16px;\n    flex-direction: row;\n    width: 90%;\n  `;\n\n\nconst HomePage = props => {\n\n  const [posts, setPosts] = useState()\n\n  const readAllPosts = async () =>\n    await getAllPosts().then(v => setPosts(v.reverse()));\n\n\n  // readAllPosts()\n  useEffect(() => {\n    document.title = 'Home Page'\n    readAllPosts()\n    console.log(props.reRenderPosts)\n  }, [props.rerenderPosts])\n  // props.rerenderPosts is a boolean in Container.jsx \n  // defaults false, if post is created, deleted or edited, will\n  // make another request to get posts data and update postfeed\n  return (\n\n    <Main>\n\n      {/* Container to separate feed and sidebar */}\n      <Container >\n\n        {posts\n          && <>\n            <PostFeedSection {...props} posts={posts} />\n            <SideBar /> </>\n        }\n      </Container>\n    </Main>\n  )\n\n}\n\nexport default HomePage","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/PostEditPage/PostEditPage.jsx",[],"/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/CreatePost/CreatePost.jsx",[],"/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/HomePage/SideBar.jsx",[],"/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/HomePage/PostFeedSection.jsx",["170","171"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components'\nimport CreatePostBox from './CreatePostBox.jsx'\nimport PostCard from '../PostCard/PostCard'\n\n\nconst Main = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  margin-right: 25px;\n  width: 75%;\n`;\n\n\nconst PostFeedSection = props => {\n\n  return (\n\n    <Main>\n      <CreatePostBox />\n      {\n        props.posts.map(post => {\n          return (\n            <React.Fragment key={post.id}>\n              <PostCard {...props} postData={post} />\n            </React.Fragment>\n\n          )\n        })\n      }\n    </Main >\n  )\n\n}\n\nexport default PostFeedSection","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/HomePage/CreatePostBox.jsx",[],"/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/LoginPage/LoginPage.jsx",[],"/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/Register/Register.jsx",["172","173","174","175"],"import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Register.css'\nimport Logo from '../../resources/images/post-tree-logo.png'\nimport {\n  registerUser\n} from '../../Services/api-helper';\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: '',\n      email: '',\n      password: ''\n    }\n  }\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    }\n    );\n  }\n  handleRegister = async (registerData) => {\n    const currentUser1 = await registerUser(registerData);\n    console.log(currentUser1)\n    // setCurrentUser(currentUser1)\n  }\n  render() {\n    console.log(this.props)\n    const { username, email, password } = this.state;\n\n    return (\n\n      <div>\n        <img className=\"login-logo\" src={Logo} alt='site logo' />\n        <form className='register-form' onSubmit={\n          (e) => {\n            e.preventDefault();\n            this.handleRegister(this.state);\n            this.props.history.push('/');\n            window.location.reload()\n\n          }\n        }> <h3>Sign up</h3> <label htmlFor=\"username\"></label> <input id=\"username\"\n          type=\"text\"\n          name=\"username\"\n          value={\n            username\n          }\n          onChange={\n            this.handleChange\n          }\n          placeholder='Username'\n          /> <br /> <label htmlFor=\"email\"></label> <input id=\"email\"\n            type=\"text\"\n            name=\"email\" value={email}\n            onChange={this.handleChange}\n            placeholder='Email'\n          />\n          <br />\n          <label htmlFor=\"password\"></label> <input id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n            placeholder='Password'\n          /> <br /> <button className='login-submit-button'>Create</button>\n\n        </form >\n        <p>Already have an account?\n        <Link to='/login' className='sign-up-here-link'> Log in here</Link>\n        </p>\n      </div >\n\n    )\n  }\n}","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/SiteHeader/DropDownContainer.jsx",[],"/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/SiteHeader/DropHeader.jsx",[],"/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/PostCard/PostCard.jsx",["176"],"import React, { useEffect } from 'react';\nimport styled from 'styled-components'\n\n\nconst Container = styled.div`\n    width: 100%;\n    min-height: 100px;\n    max-height: 118px;\n    margin: 10px 0;\n    background-color: white;\n    display: flex;\n    flex-direction: row;\n    border-radius: 4px;\n    &:hover{\n      box-shadow: 0 6px 16px 0 #acacac;\n      transition: box-shadow .5s;\n      cursor: pointer;\n    }\n    /* border: 1px solid black; */\n  `;\nconst UpvoteSide = styled.div`\n    /* border-right: .5px solid black; */\n    width: 40px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background-color: #e6e6e6;\n  border-radius: 5px 0 0 5px;\n  `;\nconst Main = styled.div`\n    display: flex;\n    width: 100%;\n    margin: 1px 8px;\n    padding-top: 8px;\n    justify-content: space-between;\n    flex-direction: column;\n    & > div{\n      width: 100%;\n      /* border: 1px solid black; */\n      text-align: left;\n    }\n  `\n\nconst Title = styled.div`\n    font-size: 18px;\n    overflow: hidden;\n  `;\n\nconst TopRow = styled.div`\n    /* color: #414141; */\n    font-size: 12px;\n  `;\n\nconst Footer = styled.div`\n    /* color: #3b3b3b; */\n    font-weight: bold;\n    font-size: 12px;\n    padding-bottom: 5px;\n  `;\n\n\nconst PostCard = props => {\n\n  // console.log(props.postData)\n\n  // useEffect(() => {\n\n  // },[props.postData])\n\n  return (<>\n    {props.postData.user ?\n      <Container onClick={e => props.history.push(`/posts/${props.postData.id}`)}>\n        <UpvoteSide>\n        </UpvoteSide>\n        <Main>\n          <TopRow>Posted by: {props.postData.user.username}</TopRow>\n          {/* title min chars: 35 */}\n          <Title>{props.postData.title}</Title>\n          {/* Number of comments */}\n          <Footer>{props.postData.comments.length} Comments</Footer>\n        </Main>\n      </Container>\n      : <></>\n    }\n  </>\n  );\n}\n\nexport default PostCard;\n\n\n// <PostFeedCard onClick={e => props.history.push(`/posts/${post.id}`)}\n//   className='postfeed-card'>\n//   <div className='postfeed-card-title'>\n//     <Link\n//       className='postfeed-card-title-link'\n//       to={`/posts/${post.id}`}>\n//       {post.title}\n//     </Link>\n//   </div>\n//   <div className='postfeed-card-image-container'>\n//     <img onError={\"this.style.display='none'\"} className='postfeed-card-image' src={post.image_url} />\n//   </div>\n//   <div className='postfeed-card-description'>{post.description}</div>\n\n//   <br />\n// </PostFeedCard>","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/PostInfoPage/TitleBar.jsx",[],"/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/PostInfoPage/Content.jsx",[],"/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/PostInfoPage/SideBar.jsx",[],"/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/PostInfoPage/CommentSection/CommentSection.jsx",[],"/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/PostInfoPage/CommentSection/MappedComments.jsx",["177","178","179","180"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components'\nimport { Redirect } from 'react-router-dom'\nimport { getAllComments, destroyComment } from '../../../Services/api-helper'\nimport moment from 'moment'; // library to display how long ago comment was posted\nimport DeleteButton from './DeleteButton'\nimport EditButton from './EditButton'\n\n\nconst Container = styled.div`\n    width: 85%;\n    margin: 0 auto;\n  `;\nconst Comment = styled.div`\n    border: 1px solid black;\n    background-color: white;\n    border-radius: 4px;\n    margin: 5px 0;\n    text-align: left;\n    padding-left: 20px;\n  `;\nconst DateCreated = styled.span`\n    font-size: 0.7em;\n    margin-left: 7px;\n  `;\n\nconst UsernameText = styled.h2`\n    font-size: .8em; \n    font-weight: 500;\n  `;\n\nconst Footer = styled.div`\n    display: flex;\n    margin-bottom: 5px;\n    /* background-color: wheat; */\n    align-items: center;\n    & > *{\n      margin-left: 7px;\n    }\n    `;\n\nconst MappedComments = props => {\n\n\n\n  const [allHTML, setAllHTML] = useState(undefined)\n  const [shouldUpdate, setShouldUpdate] = useState(false)\n  const [reRendered, setReRendered] = useState(false)\n  const [isEditing, setIsEditing] = useState(undefined)\n  const [verifiedUser, setVerifiedUser] = useState(props.currentUser)\n\n  const handleEdit = async (index) => {\n    await isEditing ? setIsEditing(false) : setIsEditing(true)\n\n    let testx = allHTML\n\n    reRendered[index].isEditing = true\n    setReRendered(testx)\n  }\n\n  const handleDeleteComment = async (postId, commentId) => {\n    // const askToDelete = confirm(\"are you sure?\")\n\n    await destroyComment(postId, commentId)\n    setShouldUpdate(true)\n    return <Redirect to={`/posts/${postId}`} />\n  }\n\n\n  const renderComments = async () => {\n    let testHTML\n    await getAllComments(props.postId).then(async value => testHTML = await value.map((comment, i) => {\n      return {\n        index: i,\n        isEditing: false,\n        text: <React.Fragment key={comment.id}>\n          <Comment>\n            <UsernameText>{comment.user.username}\n              <DateCreated>{moment(comment.created_at).fromNow()}\n              </DateCreated>\n            </UsernameText>\n\n            <p>{comment.comment_text}</p>\n\n            <Footer>\n              {/* <div>Upvote Boxxx</div> */}\n              {\n                verifiedUser ?\n                  comment.user.id === verifiedUser.id &&\n                  <>\n                    <DeleteButton handleDeleteComment={handleDeleteComment} postId={props.postId} comment={comment} />\n                    {/* <EditButton handleEdit={() =>\n                      handleEdit(i)}\n                      postId={props.postId}\n                      comment={comment}\n                    >Edit</EditButton> */}\n                  </>\n                  : <></>\n              }\n            </Footer>\n          </Comment>\n        </React.Fragment>,\n        input: <React.Fragment key={comment.id}>\n          <Comment>\n            <UsernameText>{comment.user.username}\n              <DateCreated>{moment(comment.created_at).fromNow()}\n              </DateCreated>\n            </UsernameText>\n            <><input\n              name={i}\n              key={comment.id}\n              value={comment.comment_text} />{\n              }</>\n            <Footer>\n              {/* <div>Upvote Box</div> */}\n              <DeleteButton postId={props.postId} comment={comment} />\n              {/* <EditButton handleEdit={() => handleEdit(i)} postId={props.postId} comment={comment}>Edit</EditButton> */}\n            </Footer>\n          </Comment>\n        </React.Fragment>\n      }\n    })\n    )\n\n\n    // setAllHTML(testHTML)\n\n\n    return testHTML\n  }\n\n\n  // setUser()\n  useEffect(() => {\n\n    console.log('used effect!!01!')\n\n  }, [])\n\n  useEffect(() => {\n    setShouldUpdate(false)\n    renderComments().then(ele => {\n      setAllHTML(ele)\n    })\n  }, [shouldUpdate])\n\n\n  // rerenders if state (isediting variable) is changed\n  return (\n    <Container>\n      {\n        allHTML && allHTML.map(ele => ele.isEditing ? ele.input : ele.text)}\n    </Container>\n  );\n\n}\n\nexport default MappedComments;","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/PostInfoPage/CommentSection/DeleteButton.jsx",["181","182"],"import React from 'react';\nimport styled from 'styled-components'\nimport { destroyComment } from '../../../Services/api-helper'\nimport Swal from 'sweetalert2' // alert library - prompts user y/n to delete\n\n\nconst DeleteButton = props => {\n  //props = [postId, comment]\n  let timerInterval\n\n\n\n  return (\n    <>\n      { props.comment ?\n        <>\n          <button onClick={() =>\n            Swal.fire({\n              title: 'Are you sure you want to delete this comment?',\n              text: '',\n              icon: 'warning',\n              showCancelButton: true,\n              confirmButtonText: 'Yes, delete it!',\n              cancelButtonText: 'No, keep it'\n            }).then((result) => {\n              if (result.value) {\n                props.handleDeleteComment(props.postId, props.comment.id)\n                Swal.fire({\n                  title: 'Deleting',\n                  html: '<b></b>',\n                  icon: 'success',\n                  timer: 700,\n                  timerProgressBar: false,\n                  didOpen: () => {\n                    Swal.showLoading()\n                    timerInterval = setInterval(() => {\n                      const content = Swal.getContent()\n                      if (content) {\n                        const b = content.querySelector('b')\n                        if (b) {\n                          // b.textContent = Swal.getTimerLeft()\n                        }\n                      }\n                    }, 100)\n                  },\n                  willClose: () => {\n                    clearInterval(timerInterval)\n                  }\n                })\n                // For more information about handling dismissals please visit\n                // https://sweetalert2.github.io/#handling-dismissals\n              } else if (result.dismiss === Swal.DismissReason.cancel) {\n                Swal.fire({\n                  title: 'Cancelled',\n                  html: '<b></b>',\n                  icon: 'error',\n                  timer: 700,\n                  timerProgressBar: false,\n                  didOpen: () => {\n                    Swal.showLoading()\n                    timerInterval = setInterval(() => {\n                      const content = Swal.getContent()\n                      if (content) {\n                        const b = content.querySelector('b')\n                        if (b) {\n                          // b.textContent = Swal.getTimerLeft()\n                        }\n                      }\n                    }, 100)\n                  },\n                  willClose: () => {\n                    clearInterval(timerInterval)\n                  }\n                })\n              }\n            })\n          }>Delete</button>\n        </>\n        : <></>\n      }\n    </>\n  )\n}\n\nexport default DeleteButton;","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/PostInfoPage/CommentSection/EditButton.jsx",["183"],"/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/ProfilePage/SideBar.jsx",[],"/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/ProfilePage/ChangeAvatar/ChangeAvatar.jsx",["184"],"import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components'\nimport MappedImagesTable from './MappedImagesTable'\nimport { getAllAvatars, patchUser } from '../../../Services/api-helper'\n\nconst Container = styled.div`\n    width: 75%;\n    background-color: grey;\n    margin: 0 auto;\n  `;\n\nconst MainImage = styled.img`\n    margin-top: 100px;\n    border: 1px solid black;\n    height: 190px;  \n  `;\n\nconst ChangeAvatar = props => {\n\n\n  const handleClickImage = (url, name) => {\n    console.log(`selected ${name}`)\n    setMainImage(url)\n  }\n\n  const [allImages, setAllImages] = useState()\n  // current profile picture is default mainImage\n  const [mainImage, setMainImage] = useState(props.currentUser.image)\n\n\n  useEffect(() => {\n    getAllAvatars().then(ele => {\n      setAllImages(ele)\n      mainImage === null && setMainImage(ele[Math.floor(Math.random() * ele.length)].source)\n    })\n  }, [])\n  return (\n    <Container>\n      {\n        allImages &&\n        <>\n          {\n            mainImage === null ?\n              <MainImage src={allImages[Math.floor(Math.random() * allImages.length)].source} />\n              :\n              <>\n                <MainImage src={mainImage} /></>\n\n          }\n          {allImages && mainImage &&\n            <MappedImagesTable {...props} currentUser={props.currentUser} mainImage={mainImage} patchUser={patchUser} handleClickImage={handleClickImage} imageList={allImages} />}\n        </>\n      }\n    </Container>\n\n  );\n}\n\nexport default ChangeAvatar;\n\n\n// 1  on click \n// 2  select clicked avatar and assign it to state\n// 3  top image is enlarged and showed selected image\n//      - Current image by default, or grey if null\n// 4  confirm selection -> set image src url to users image column\n// \n// \n// ","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/ProfilePage/ChangeAvatar/MappedImagesTable.jsx",["185"],"import React from 'react';\nimport { Redirect } from 'react-router';\nimport styled from 'styled-components'\nimport { patchUser } from '../../../Services/api-helper'\n\nconst Container = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    align-content: flex-start;\n    background-color: white;\n  `;\nconst Image = styled.img`\n  margin-top: 100px;\n  height: 190px;\n  &:hover{\n    cursor: pointer;\n  }\n`;\n\nconst MappedImagesTable = props => {\n\n\n  const handleUserUpdate = async (id, userData) =>\n    await patchUser(id, userData)\n\n  const SubmitButton = styled.div`\n    display: flex;\n    align-items: center;\n    font-size: 20px;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    background-color: #7dcfad;\n    height: 50px;\n    text-align: center;\n    padding: 25px;\n    &:hover{\n      cursor: pointer;\n    }\n  `;\n  return (\n    <Container>\n      {\n        props.imageList.map(ele => <>\n          <div onClick={() => props.handleClickImage(ele.source, ele.name)}>\n            <Image src={ele.source} />\n            <p>{ele.name}</p>\n          </div>\n        </>)\n      }\n\n      <SubmitButton onClick={() => {\n\n        // console.log(`Submitting ${props.mainImage}`)\n        handleUserUpdate(props.currentUser.id, { image: props.mainImage })\n        props.history.push('/');\n        window.location.reload()\n\n      }\n      }>Submit!</SubmitButton>\n    </Container>\n  );\n}\n\nexport default MappedImagesTable;","/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/PostInfoPage/CommentSection/CommentInput.jsx",[],"/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/LoginPage/ImageSide.jsx",["186","187","188","189"],"/Users/jasoncruz/Documents/clones/social-media-app/client/src/components/LoginPage/MainSide.jsx",["190"],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":4,"column":20,"nodeType":"197","messageId":"198","endLine":4,"endColumn":25},{"ruleId":"199","severity":1,"message":"200","line":3,"column":38,"nodeType":"201","messageId":"202","endLine":3,"endColumn":40},{"ruleId":"195","severity":1,"message":"203","line":8,"column":23,"nodeType":"197","messageId":"198","endLine":8,"endColumn":37},{"ruleId":"195","severity":1,"message":"204","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":26},{"ruleId":"195","severity":1,"message":"205","line":6,"column":10,"nodeType":"197","messageId":"198","endLine":6,"endColumn":24},{"ruleId":"195","severity":1,"message":"206","line":6,"column":26,"nodeType":"197","messageId":"198","endLine":6,"endColumn":37},{"ruleId":"195","severity":1,"message":"207","line":18,"column":17,"nodeType":"197","messageId":"198","endLine":18,"endColumn":25},{"ruleId":"208","severity":1,"message":"209","line":48,"column":6,"nodeType":"210","endLine":48,"endColumn":8,"suggestions":"211"},{"ruleId":"195","severity":1,"message":"212","line":3,"column":28,"nodeType":"197","messageId":"198","endLine":3,"endColumn":38},{"ruleId":"195","severity":1,"message":"213","line":3,"column":40,"nodeType":"197","messageId":"198","endLine":3,"endColumn":50},{"ruleId":"195","severity":1,"message":"203","line":29,"column":23,"nodeType":"197","messageId":"198","endLine":29,"endColumn":37},{"ruleId":"208","severity":1,"message":"214","line":47,"column":6,"nodeType":"210","endLine":47,"endColumn":8,"suggestions":"215"},{"ruleId":"208","severity":1,"message":"216","line":48,"column":6,"nodeType":"210","endLine":48,"endColumn":8,"suggestions":"217"},{"ruleId":"195","severity":1,"message":"204","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":26},{"ruleId":"195","severity":1,"message":"218","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":14},{"ruleId":"195","severity":1,"message":"205","line":6,"column":10,"nodeType":"197","messageId":"198","endLine":6,"endColumn":24},{"ruleId":"195","severity":1,"message":"219","line":6,"column":39,"nodeType":"197","messageId":"198","endLine":6,"endColumn":47},{"ruleId":"195","severity":1,"message":"220","line":6,"column":49,"nodeType":"197","messageId":"198","endLine":6,"endColumn":56},{"ruleId":"195","severity":1,"message":"221","line":6,"column":58,"nodeType":"197","messageId":"198","endLine":6,"endColumn":69},{"ruleId":"195","severity":1,"message":"222","line":6,"column":71,"nodeType":"197","messageId":"198","endLine":6,"endColumn":80},{"ruleId":"195","severity":1,"message":"213","line":6,"column":82,"nodeType":"197","messageId":"198","endLine":6,"endColumn":92},{"ruleId":"195","severity":1,"message":"223","line":8,"column":8,"nodeType":"197","messageId":"198","endLine":8,"endColumn":21},{"ruleId":"208","severity":1,"message":"224","line":37,"column":6,"nodeType":"210","endLine":37,"endColumn":27,"suggestions":"225"},{"ruleId":"195","severity":1,"message":"226","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"227","line":1,"column":27,"nodeType":"197","messageId":"198","endLine":1,"endColumn":36},{"ruleId":"195","severity":1,"message":"222","line":6,"column":3,"nodeType":"197","messageId":"198","endLine":6,"endColumn":12},{"ruleId":"195","severity":1,"message":"206","line":8,"column":3,"nodeType":"197","messageId":"198","endLine":8,"endColumn":14},{"ruleId":"195","severity":1,"message":"213","line":9,"column":3,"nodeType":"197","messageId":"198","endLine":9,"endColumn":13},{"ruleId":"195","severity":1,"message":"228","line":10,"column":3,"nodeType":"197","messageId":"198","endLine":10,"endColumn":14},{"ruleId":"195","severity":1,"message":"227","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":26},{"ruleId":"195","severity":1,"message":"229","line":7,"column":8,"nodeType":"197","messageId":"198","endLine":7,"endColumn":18},{"ruleId":"195","severity":1,"message":"230","line":48,"column":24,"nodeType":"197","messageId":"198","endLine":48,"endColumn":39},{"ruleId":"195","severity":1,"message":"231","line":50,"column":9,"nodeType":"197","messageId":"198","endLine":50,"endColumn":19},{"ruleId":"208","severity":1,"message":"232","line":143,"column":6,"nodeType":"210","endLine":143,"endColumn":20,"suggestions":"233"},{"ruleId":"195","severity":1,"message":"234","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":14},{"ruleId":"195","severity":1,"message":"235","line":3,"column":10,"nodeType":"197","messageId":"198","endLine":3,"endColumn":24},{"ruleId":"195","severity":1,"message":"236","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":22},{"ruleId":"208","severity":1,"message":"237","line":36,"column":6,"nodeType":"210","endLine":36,"endColumn":8,"suggestions":"238"},{"ruleId":"195","severity":1,"message":"239","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":18},{"ruleId":"195","severity":1,"message":"226","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"227","line":1,"column":27,"nodeType":"197","messageId":"198","endLine":1,"endColumn":36},{"ruleId":"195","severity":1,"message":"240","line":3,"column":8,"nodeType":"197","messageId":"198","endLine":3,"endColumn":16},{"ruleId":"195","severity":1,"message":"241","line":5,"column":8,"nodeType":"197","messageId":"198","endLine":5,"endColumn":12},{"ruleId":"195","severity":1,"message":"242","line":28,"column":7,"nodeType":"197","messageId":"198","endLine":28,"endColumn":12},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setCurrentUser' is assigned a value but never used.","'Component' is defined but never used.","'getAllComments' is defined but never used.","'getAllPosts' is defined but never used.","'setPosts' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.","ArrayExpression",["245"],"'getOnePost' is defined but never used.","'verifyUser' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUser' and 'getAllCurrentUsersPosts'. Either include them or remove the dependency array.",["246"],"React Hook useEffect has a missing dependency: 'setCurrentPost'. Either include it or remove the dependency array.",["247"],"'Link' is defined but never used.","'postPost' is defined but never used.","'putPost' is defined but never used.","'destroyPost' is defined but never used.","'loginUser' is defined but never used.","'CreatePostBox' is defined but never used.","React Hook useEffect has a missing dependency: 'props.reRenderPosts'. Either include it or remove the dependency array.",["248"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'removeToken' is defined but never used.","'EditButton' is defined but never used.","'setVerifiedUser' is assigned a value but never used.","'handleEdit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'renderComments'. Either include it or remove the dependency array.",["249"],"'styled' is defined but never used.","'destroyComment' is defined but never used.","'patchComment' is defined but never used.","React Hook useEffect has a missing dependency: 'mainImage'. Either include it or remove the dependency array.",["250"],"'Redirect' is defined but never used.","'treeLogo' is defined but never used.","'Logo' is defined but never used.","'Title' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},"Update the dependencies array to be: [currentUser]",{"range":"263","text":"264"},"Update the dependencies array to be: [currentUser, getAllCurrentUsersPosts]",{"range":"265","text":"266"},"Update the dependencies array to be: [setCurrentPost]",{"range":"267","text":"268"},"Update the dependencies array to be: [props.reRenderPosts, props.rerenderPosts]",{"range":"269","text":"270"},"Update the dependencies array to be: [renderComments, shouldUpdate]",{"range":"271","text":"272"},"Update the dependencies array to be: [mainImage]",{"range":"273","text":"274"},[1539,1541],"[currentUser]",[1347,1349],"[currentUser, getAllCurrentUsersPosts]",[1061,1063],"[setCurrentPost]",[962,983],"[props.reRenderPosts, props.rerenderPosts]",[3903,3917],"[renderComments, shouldUpdate]",[918,920],"[mainImage]"]